% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geocode.R
\name{parse_geocodes}
\alias{parse_geocodes}
\alias{parse_geocode}
\title{Parse geocode API results}
\usage{
parse_geocodes(gclst, output = c("latlng", "latlngc", "latlnga", "all"),
  gcs = NULL, idf = TRUE, ...)
}
\arguments{
\item{gclst}{a list comprising of lists of class 'google_geocode', 'baidu_geocode'
or 'gaode_geocode', subclasses of 'api_data'.}

\item{output}{character, 'latlng', 'latlngc', 'latlnga', or 'all'. Default 
'latlng'. Refer to \code{\link{geocode}()}.}

\item{gcs}{character, the geo-coordinate system for output. 'WGS-84', 'GCJ-02', 
or 'BD-09'. Default NULL, which indicates that no coordinate conversion will be 
conducted on the results.}

\item{idf}{logical, whether generate an identifier column 'idf' in the output. 
Default TRUE.}

\item{...}{optional arguments. Generic args: \itemize{
 \item ics_china: default coordinate system for locations in China, 'WGS-84', 
  'GCJ-02', or 'BD-09' \cr
 \item ics_intl: default coordinate system for locations outside China, 'WGS-84', 
  'GCJ-02', or 'BD-09' 
}
API-specific args: \describe{
 \item{google api}{\itemize{
  \item name_type: character 'long' or 'short', indicating whether to extract
   long_name or short_name. Default 'long'.
 }}
 \item{baidu api}{\itemize{
  \item (not used yet)
 }}
 \item{gaode api}{\itemize{
  \item (not used yet)
 }}
}}
}
\value{
a \code{\link[tibble]{tibble}}
}
\description{
This is a wrapper of API result parsers for google, baidu and gaode map. 
It can serve as a subsequent handler to convert 'raw' results yielded
using \code{\link{geocode}()} to a structured data.frame.
}
\examples{
\dontrun{
gc <- geocode(c('<addr1>', '<addr2>'), api='google', output='raw')
parse_geocodes(gc, output='all')
}
}
\seealso{
\code{\link{parse_api_data}()}, \code{\link{geocode}()},
 \code{\link{revgeocode}()}, \code{\link{parse_revgeocodes}()};
 \code{\link{geohost}()}, \code{\link{parse_geohoss}()}
}
\author{
Yiying Wang, \email{wangy@aetna.com}
}
