% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api.R
\name{synthesize_googlemap_api}
\alias{synthesize_googlemap_api}
\alias{synthesize_google_api_geocode}
\alias{synthesize_google_api_revgeocode}
\title{Synthesize googlemap API}
\usage{
synthesize_googlemap_api(url_body, api = c("geocode", "revgeocode"),
  use_curl = TRUE, ...)

synthesize_google_api_geocode(url_body, region = NULL,
  components = NULL, use_curl = TRUE, ...)

synthesize_google_api_revgeocode(url_body, result_type = NULL,
  location_type = NULL, use_curl = TRUE, ...)
}
\arguments{
\item{url_body}{character, the leading argument in the API URL.}

\item{api}{character, 'geocode' or 'revgeocode'.}

\item{use_curl}{logical, whether use \code{curl}(). Default TRUE.}

\item{...}{other arguments to pass to the function, e.g., \code{language}, 
\code{client}, \code{signature}, \code{key}}

\item{region}{character, for geocoding. The region code, specified as a ccTLD 
("top-level domain") two-character value. This parameter will only influence,
 not fully restrict, results from the geocoder.}

\item{components}{character, for geocoding. A components filter with elements 
separated by a pipe (|). The components filter is required if the request doesn't 
include an address. Each element in the components filter consists of a 
\code{component:value} pair, and fully restricts the results from the geocoder.}

\item{result_type}{character, for regeocoding. A filter of one or more address 
types, separated by a pipe (|). If the parameter contains multiple address types,
 the API returns all addresses that match any of the types. A note about 
 processing: The result_type parameter does not restrict the search to the 
 specified address type(s). Rather, the result_type acts as a post-search 
 filter: the API fetches all results for the specified latlng, then discards 
 those results that do not match the specified address type(s). Note: 
 This parameter is available only for requests that include an API key or 
 a client ID. The following values are supported: \cr
 'street_address', 'route', 'intersection', 'political', 'country', 
 'administrative_area_level_1', 'administrative_area_level_2',
 'administrative_area_level_3', 'administrative_area_level_4', 
 'administrative_area_level_5', 'colloquial_area', 'locality', 'sublocality', 
 'neighborhood', 'premise', 'subpremise', 'postal_code', 'natural_feature', 
 'airport', 'park', 'point_of_interest.'}

\item{location_type}{character, for revgeocoding. A filter of one or more 
location types, separated by a pipe (|). If the parameter contains multiple 
location types, the API returns all addresses that match any of the types. 
A note about processing: The location_type parameter does not restrict the 
search to the specified location type(s). Rather, the location_type acts as 
a post-search filter: the API fetches all results for the specified latlng, 
then discards those results that do not match the specified location type(s). 
Note: This parameter is available only for requests that include an API key 
or a client ID. The following values are supported: \cr
'ROOFTOP', 'RANGE_INTERPOLATED', 'GEOMETRIC_CENTER', 'APPROXIMATE.'}
}
\value{
A \code{url} object for \code{\link{get_api_data}()} use.
}
\description{
Working function for \code{\link[aseskit]{synthesize_api}()}. It will call
lower functions \code{\link{synthesize_google_api_geocode}()} or 
\code{\link{synthesize_google_api_revgeocode}()}.
}
\note{
When \code{key} is omitted or set NULL, the function will search for it
in the cache. If nothing is found, a GUI wizard will be launched for you to 
input the API key. If you want to bypass API key, set \code{key} = NA.
}
\examples{
\dontrun{
synthesize_googlemap_api("<Address>", key="<YOUR GOOGLEMAP KEY>")
}
}
\references{
Googlemaps API documentation: 
\url{https://developers.google.com/maps/documentation}
}
